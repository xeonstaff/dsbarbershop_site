---
const { message, duration } = Astro.props;
const [show, setShow] = useState(true);
const [timer, setTimer] = useState(null);

onMount(() => {
  setTimer(setTimeout(() => {
    setShow(false);
  }, duration));
});

onDestroy(() => {
  clearTimeout(timer);
});

const handleClose = () => {
  setShow(false);
};
---
{show && (
  <div class="toast">
    <span>{message}</span>
    <button class="close" onClick={handleClose}>Ã—</button>
  </div>
)}

<style>
  .toast {
    position: absolute;
    top: 90px; /* adjust to your header height */
    left: 50%;
    transform: translateX(-50%);
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 10px 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    animation: slideDown 1s ease-in-out;
  }
  .close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 18px;
    cursor: pointer;
  }
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateX(-50%) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }
  @media screen and (max-width: 480px) {
    .toast {
      width: 80%;
      padding: 10px;
    }
  }
</style>