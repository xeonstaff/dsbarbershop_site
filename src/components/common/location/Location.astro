---
import IconLabel from "../icon_label/IconLabel.astro";
import PhoneSVG from "../../assets/phone.astro";
import EmailSVG from "../../assets/email.astro";
import AddressSVG from "../../assets/address.astro";

const { locationDetails, options={} } = Astro.props;
const {showthePlace=true, showLables=false} = options
const { thePlace, phone, email, address } = locationDetails;
---

<div class="location_layout">
  {showthePlace ?<div class="location_place text">
    {thePlace}
  </div> : null}

  <div class="location_phone text">
    <IconLabel type={showLables?'phone':'none'} text={phone}><PhoneSVG /></IconLabel>
  </div>
  <div class="location_address text">
    <IconLabel  type={showLables?'address':'none'} text={address}><AddressSVG /></IconLabel>
  </div>
  <div class=" text">
    <IconLabel  type={showLables?'email':'none'} text={email}><EmailSVG /></IconLabel>
  </div>
</div>

<style>
  .location_layout {
    --svg_container-backgroundColor: none;
    color: var(--location_layout-Color, var(--main_white));
    display: grid;
    grid-template-columns: var(
      --location_layout-gridTemplateColumns,
      repeat(2, 1fr)
    );
    grid-template-rows: var(--location_layout-gridTemplateRows, repeat(3, 1fr));
    grid-template-areas: var(
      --location_layout-gridTemplateAreas,
      "place place" "phone email" "address address"
    );
    font-size: 1em;
    font-family: "barlow";
  }

  .text{
    font-size: var(--location_layout-font-size)
  }
  .location_place {
    grid-area: place;
    font-size: 1.3em;
    font-family: "barlow";
    font-weight: 900;

    padding: 10px 15px;
  }
  .location_phone {
    grid-area: phone;
  }
  .location_email {
    grid-area: email;
  }
  .location_address {
    grid-area: address;
  }

  @media screen and (max-width: 500px) {
    .text {
      font-size: 1.5em;
    }
  }
</style>
