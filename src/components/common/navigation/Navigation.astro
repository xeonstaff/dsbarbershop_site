---
const {siteLinks=[], activePage, Cssvars = {}, class: className, ...rest } = Astro.props;

const activeLink = (currentLink) => {
  const cleanLink = currentLink.split(" ").join("").toLowerCase();
  return activePage === cleanLink
    ? "var(--main_darkVanilla)"
    : "var(--main_white)";
};
---

<nav class:list={["navigation", className]} {...rest}>
  <ul class="menu">
    {
      siteLinks.map((link) => (
        <li class="link">
          <a href={link.path}  style={{ color: activeLink(link.title) }}>
            {link.title}</a>
        </li>
      ))
    }
  </ul>
</nav>

<style define:vars={Cssvars} scoped>
  .navigation {
    height: 100%;
    font-size: inherit;
    width:100%;
  }
  ul {
    display: flex;
    flex-direction: var(--navigtaion_ul_flexDirection, row);
    justify-content: var(--navigation_ul-justifyContent, space-evenly);
    height: 100%;
    font-size: inherit;
  }

  li {
    margin-left: 5px;
    margin-right: 5px;
    list-style: none;
  }

  li,
  a,
  a:visited {
    font-family: "barlow";
    text-transform: uppercase;
    text-decoration: none;
    font-size: 1em;
    font-weight: 900;
    letter-spacing: 2px;
    color: var(--navigation_aHref_color, var(--main_white));
  }

</style>
