---
import { getImage } from "astro:assets";
import { getEntry } from "astro:content";
import LocationsLayout from "src/layouts/LocationsLayout.astro";

import {
  CardStaff,
  StoreHours,
  HeroWithText,
  Text,
  EmbededMap,
  Location,
} from "@components/common";
import { Footer } from "@components/blocks";

import flatsBG from "./assets/flats.webp";
import greeneBG from "./assets/greene.webp";

const { locationKey } = Astro.props;
const heroBackground = locationKey === "theflats" ? flatsBG : greeneBG;

const { data } = await getEntry("locations", locationKey);
const optimizedBackground = await getImage({
  src: heroBackground,
  width: 1440,
  height: 688,
  format: "webp",
});
---

<LocationsLayout
  locationKey={locationKey}
  title="D's Barbershop - The Greene"
  class="the_flats_page"
>
  <HeroWithText
    slot="locationHeader"
    backgroundImage={optimizedBackground}
    thePlace={data.thePlace}
    theLocation={data.location}
  />

  <div class="locationHours" slot="locationHours">
    <StoreHours locationDetails={data} />
    <Location
      options={{ showthePlace: false, showLables: true }}
      locationDetails={data}
    />
  </div>

  <EmbededMap class="locationMap" slot="locationMap" locationMap="theflats" h={240} w={336} />

  <div class="staff_profile" slot="locationStaff"> 
    <Text tag="h2" style="align-content:center;">Meet our staff</Text>
    <div class="locations_staff">
      {
        data.staff.map((x) => (
          <CardStaff staffName={x} bookPath={data.bookPath} />
        ))
      }
    </div>
  </div>

  <Footer class="footer" pageId="theflats" slot="locationFooter" />
</LocationsLayout>

<style>
  .staff_profile {
    display: grid;
    grid-template-rows: 120px 1fr;
    width: 100vw;
    paddding: 50px;
    justify-content: center;
    h2 {
      --commonformat_textAlign: center;
    }
  }

  .locations_staff {
    display: flex;
    flex-wrap: wrap;
    gap: 100px;
    justify-content: center;
    max-width: 70vw;
  }
  .locationHours {
    width: 500px;
    height: 410px;
    gap: 60px;
    margin-top: 50px;
    width: var(--locationHours_width, 100vw);
    background-color: var(--main_white);
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    padding: 20px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);

    --location_layout-backgroundColor: var(--main_white);
    --location_layout-Color: var(--main_black);
    --location_layout-gridTemplateColumns: 1fr;
    --location_layout-gridTemplateAreas: "address" "phone";
  }

  .locationMap{
    width: 500px;
    height: 500px;
  }

  @media screen and (max-width: 820px) {
    .flatsFooter {
    }
    .locationHours {
      height: 200px;
      flex-direction: row;
      gap: 70px;
      margin-top: 0px;
      margin-bottom: 50px;
      padding: 10px;

      -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
      -moz-box-sizing: border-box; /* Firefox, other Gecko */
      box-sizing: border-box;
      --location_layout-backgroundColor: var(--main_white);
      --location_layout-Color: var(--main_black);
      --location_layout-gridTemplateColumns: 1fr;
      --location_layout-gridTemplateAreas: "address" "phone" "email";
      --store_hours_width: 50%;
      --store_hours_justifyContent: space-around;
    }
    .locations_staff {
      gap: 50px;
    }
  }

  @media screen and (max-width: 500px) {
    .locationHours {
      flex-direction: column;
      margin-top: 0px;
      margin-bottom: 50px;
      gap: 14px;
      height: 250px;
      --location_layout-backgroundColor: var(--main_white);
      --location_layout-Color: var(--main_black);
      --location_layout-gridTemplateColumns: 1fr;
      --location_layout-gridTemplateAreas: "address" "phone" "email";
      --store_hours_width: 100%;
      --store_hours_justifyContent: space-between;
      --store_hours_marginLeft: 0px;
    }
  }
</style>
